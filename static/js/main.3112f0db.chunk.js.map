{"version":3,"sources":["GoodsList.jsx","Button.jsx","ButtonsControl.jsx","RenderGoods.jsx","App.js","index.js"],"names":["GoodsList","goodsList","className","map","goods","key","Button","onClickFunction","type","text","onClick","ButtonsControl","listOfGoods","reverse","setSortByAlphabet","setSortByLength","reset","setLength","length","id","value","onChange","event","style","width","display","index","RenderGoods","state","props","goodsFromServer","isReversed","sortBy","setState","target","renderVisibleList","visibleList","filter","sort","goods1","goods2","localeCompare","this","React","Component","App","isStart","renderListOfGoods","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3112f0db.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goodsList }) => (\n  <ul className=\"list-group list-group-flush\">\n    {goodsList.map(goods => (\n      <li key={goods} className=\"list-group-item\">{goods}</li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goodsList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClickFunction, type, text }) => (\n  <button\n    type=\"button\"\n    className={`button btn btn-outline-${type}`}\n    onClick={onClickFunction}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onClickFunction: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './Button';\n\nexport const ButtonsControl = (\n  {\n    listOfGoods,\n    reverse,\n    setSortByAlphabet,\n    setSortByLength,\n    reset,\n    setLength,\n    length,\n  },\n) => (\n  <>\n    <Button\n      onClickFunction={reverse}\n      type=\"primary\"\n      text=\"Reverse\"\n    />\n    <Button\n      onClickFunction={setSortByAlphabet}\n      type=\"primary\"\n      text=\"Sort alphabetically\"\n    />\n    <Button\n      onClickFunction={reset}\n      type=\"primary\"\n      text=\"Reset\"\n    />\n    <Button\n      onClickFunction={setSortByLength}\n      type=\"primary\"\n      text=\"Sort by length\"\n    />\n    <select\n      className=\"form-select\"\n      id=\"inputGroupSelect01\"\n      value={length}\n      onChange={event => setLength(event)}\n      style={{\n        width: '100px',\n        display: 'inline-block',\n      }}\n    >\n      {listOfGoods.map((goods, index) => (\n        <option key={goods} value={index + 1}>{index + 1}</option>\n      ))}\n    </select>\n  </>\n);\n\nButtonsControl.propTypes = {\n  listOfGoods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  reverse: PropTypes.func.isRequired,\n  setSortByAlphabet: PropTypes.func.isRequired,\n  setSortByLength: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  setLength: PropTypes.func.isRequired,\n  length: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoodsList } from './GoodsList';\nimport { ButtonsControl } from './ButtonsControl';\n\nexport class RenderGoods extends React.Component {\n  state = {\n    goodsList: this.props.goodsFromServer,\n    isReversed: false,\n    sortBy: null,\n    length: 1,\n  }\n\n  reverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  setSortByAlphabet = () => {\n    this.setState({ sortBy: 'alphabet' });\n  }\n\n  setSortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  }\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: null,\n      length: 1,\n    });\n  }\n\n  setLength = (event) => {\n    this.setState({ length: event.target.value });\n  }\n\n  renderVisibleList = () => {\n    const visibleList\n    = this.state.goodsList.filter(goods => goods.length >= this.state.length);\n\n    visibleList.sort((goods1, goods2) => {\n      switch (this.state.sortBy) {\n        case 'alphabet':\n          return goods1.localeCompare(goods2);\n\n        case 'length':\n          return goods1.length - goods2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (this.state.isReversed) {\n      visibleList.reverse();\n    }\n\n    return visibleList;\n  }\n\n  render() {\n    return (\n      <div>\n        <GoodsList goodsList={this.renderVisibleList()} />\n        <ButtonsControl\n          listOfGoods={this.state.goodsList}\n          reverse={this.reverse}\n          setSortByAlphabet={this.setSortByAlphabet}\n          setSortByLength={this.setSortByLength}\n          reset={this.reset}\n          setLength={this.setLength}\n          length={this.state.length}\n        />\n      </div>\n    );\n  }\n}\n\nRenderGoods.propTypes = {\n  goodsFromServer: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport { RenderGoods } from './RenderGoods';\nimport { Button } from './Button';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isStart: false,\n  }\n\n  renderListOfGoods = () => {\n    this.setState({ isStart: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isStart\n          ? <RenderGoods goodsFromServer={goodsFromServer} />\n          : (\n            <div className=\"button-container\">\n              <Button\n                onClickFunction={this.renderListOfGoods}\n                type=\"success\"\n                text=\"Start\"\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}